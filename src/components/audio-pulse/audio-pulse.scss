@import '../../styles/tokens'; // Ensure tokens are available

.audioPulse {
  display: flex;
  width: 32px; // Adjusted width for 5 lines
  justify-content: space-evenly;
  align-items: center;
  transition: all 0.5s;

  & > div {
    background-color: var(--audio-pulse-inactive-color, $light-gray); // Default when not active or volume is zero
    border-radius: 1000px; // Keep it very rounded
    width: 4px;
    min-height: 4px; // from original component's logic
    transition: height 0.1s, background-color 0.2s ease-in-out; // Added background-color transition
  }

  &.hover > div {
    // animation: hover 1.4s infinite alternate ease-in-out; // Keep if hover animation is desired
    // For now, focusing on volume-based color, hover can be added back if needed.
  }

  // height: 4px; // This was on .audioPulse, likely for alignment. Let content define height.
  transition: opacity 0.333s;

  &.active {
    opacity: 1;

    // Default active color (also for volume-low if volume > 0)
    & > div {
      background-color: var(--audio-pulse-low-color, $primary-color); // Example: Use primary for low/default active
    }
    // If specific .volume-low class is used and needs different color:
    // &.volume-low > div {
    //   background-color: var(--audio-pulse-low-color, $success-color);
    // }

    // Override for medium volume
    &.volume-medium > div {
      background-color: var(--audio-pulse-medium-color, $warning-color);
    }

    // Override for high volume
    &.volume-high > div {
      background-color: var(--audio-pulse-high-color, $danger-color);
    }
  }
  // Ensure inactive state (no .active class) has a clear, muted color
  &:not(.active) > div {
    background-color: var(--audio-pulse-inactive-color, $light-gray); // Same as default above
    opacity: 0.5; // Make inactive lines more subtle
  }
}

@keyframes hover {
  from {
    transform: translateY(0);
  }

  to {
    transform: translateY(-3.5px);
  }
}

@keyframes pulse {
  from {
    scale: 1 1;
  }

  to {
    scale: 1.2 1.2;
  }
}
