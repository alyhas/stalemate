@import '../../styles/tokens';

.control-button {
  background-color: transparent;
  border: 1px solid transparent;
  padding: $spacing-sm;
  border-radius: $border-radius;
  cursor: pointer;
  color: var(--text-color); // Default icon/text color from theme
  position: relative;
  display: inline-flex;
  align-items: center;
  justify-content: center;
  transition: background-color $default-transition-duration $default-transition-timing-function,
              border-color $default-transition-duration $default-transition-timing-function,
              color $default-transition-duration $default-transition-timing-function;
  -webkit-tap-highlight-color: transparent; // Remove tap highlight on mobile

  &:focus {
    outline: 2px solid var(--primary-color, $primary-color); // Use themed primary color for outline
    outline-offset: 2px;
  }

  &:disabled {
    cursor: not-allowed;
    opacity: 0.5;
    background-color: transparent;
    color: var(--text-muted-on-bg-color, #{lighten($dark-gray, 25%)}); // Default to on-bg version
  }

  .control-button-icon {
    font-size: $font-size-xl; // Icon size (e.g., 24px if base is 16px)
    // Material Symbols are designed to scale with font-size
    // No specific margin needed due to button's flex centering
  }

  .status-indicator {
    width: 6px;
    height: 6px;
    background-color: var(--primary-color, $primary-color); // Use themed primary color
    border-radius: 50%;
    position: absolute;
    top: $spacing-xs;
    right: $spacing-xs;
    // border: 1px solid var(--background-color); // Optional: border against button background
  }

  // Hover and Active states
  &:not(:disabled):hover {
    background-color: var(--surface-hover-color); // Use defined CSS var
  }

  &:not(:disabled):active {
    background-color: var(--surface-active-color); // Use defined CSS var
  }

  // Toggled active state (when props.active is true)
  &.active:not(:disabled) {
    background-color: var(--surface-selected-color); // Use defined CSS var
    // color: var(--primary-color); // Optional: change icon color if selection implies primary interaction
  }

  // Outlined variant
  &.outlined {
    background-color: transparent;
    border: 1px solid var(--border-color);

    &:not(:disabled):hover {
      background-color: var(--surface-hover-color);
      border-color: var(--primary-color-hover, var(--primary-color)); // Use hover state for border too
    }
    &.active:not(:disabled) {
      background-color: var(--surface-selected-color);
      border-color: var(--primary-color, $primary-color);
      color: var(--primary-color, $primary-color);
    }
  }
}

// CSS-only Tooltip for [data-tooltip]
// Note: Tooltips can have issues with overflow if parent containers hide overflow.
// A JavaScript-based tooltip might be more robust for complex layouts.
.control-button[data-tooltip] {
  // No specific style needed on the button itself for the tooltip,
  // but it must have position: relative (already set).

  &::before, &::after { // ::before for potential triangle, ::after for text
    opacity: 0;
    visibility: hidden;
    pointer-events: none; // Ensure tooltip doesn't interfere with mouse events on button
    transition: opacity 0.2s ease, visibility 0s linear 0.2s; // Delay visibility to prevent flicker
  }

  // Tooltip text bubble
  &::after {
    content: attr(data-tooltip);
    position: absolute;
    bottom: 100%;
    left: 50%;
    transform: translateX(-50%) translateY(-($spacing-xs + 2px));
    background-color: var(--tooltip-bg-color, $dark-gray); // Use themed tooltip background
    color: var(--tooltip-text-color, $light-gray);       // Use themed tooltip text color
    padding: $spacing-xs $spacing-sm;
    border-radius: $border-radius;
    font-size: $font-size-sm;
    line-height: $line-height-sm; // Ensure consistent line height
    white-space: nowrap;
    z-index: 1000; // High z-index to appear above other elements
  }

  // Optional: Tooltip arrow (simple triangle)
  // &::before {
  //   content: '';
  //   position: absolute;
  //   bottom: 100%;
  //   left: 50%;
  //   transform: translateX(-50%) translateY($spacing-xs); // Position arrow just below the bubble
  //   border-width: 5px 5px 0 5px; // Triangle shape (top arrow)
  //   border-style: solid;
  //   border-color: $dark-gray transparent transparent transparent; // Match tooltip background
  //   z-index: 1001; // Above the bubble slightly if overlapping
  // }

  &:hover::after, &:hover::before,
  &:focus::after, &:focus::before { // Show tooltip on hover and focus for accessibility
    opacity: 1;
    visibility: visible;
    transition-delay: 0.3s; // Slight delay before showing tooltip
  }
}
