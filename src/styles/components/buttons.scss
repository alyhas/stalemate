@import '../tokens';
@import '../typography'; // For font variables if needed, or use base body styles

// Base Button Style
.btn {
  display: inline-block;
  font-weight: $font-weight-normal;
  color: var(--text-color, $dark-gray); // Default button text color
  text-align: center;
  vertical-align: middle;
  cursor: pointer;
  user-select: none;
  background-color: transparent; // Default transparent background
  border: $border-width solid transparent; // Default transparent border
  padding: $spacing-sm $spacing-md;
  font-size: $font-size-base;
  line-height: $line-height-base; // 1.5
  border-radius: $border-radius; // 4px
  // Using variables from animations.scss for consistency, keeping 0.15s duration for buttons
  transition: color 0.15s $default-transition-timing-function,
              background-color 0.15s $default-transition-timing-function,
              border-color 0.15s $default-transition-timing-function,
              box-shadow 0.15s $default-transition-timing-function;

  &:hover {
    text-decoration: none;
  }

  &:focus, &.focus {
    outline: 0;
    // Use CSS var for focus shadow, potentially with a specific button focus shadow if needed
    box-shadow: var(--input-focus-box-shadow, 0 0 0 0.2rem #{rgba($primary-color, 0.25)});
  }

  &:disabled, &.disabled {
    opacity: 0.65;
    cursor: not-allowed;
    box-shadow: none;
    // Ensure background and border are appropriate for disabled state if they were colored
    // background-color: transparent;
    // border-color: transparent;
  }

  // For linking purposes if an <a> tag is used with .btn
  &.disabled,
  fieldset:disabled & {
    pointer-events: none;
  }
}

// Primary Button
.btn-primary {
  color: var(--text-color-on-primary, #{$white});
  background-color: var(--primary-color, $primary-color);
  border-color: var(--primary-color, $primary-color);

  &:hover:not(:disabled) {
    color: var(--text-color-on-primary, #{$white});
    background-color: var(--primary-color-hover, #{darken($primary-color, 7.5%)});
    border-color: var(--primary-color-hover, #{darken($primary-color, 10%)});
  }

  &:focus, &.focus {
    // Use a specific focus shadow variable if defined, or derive from primary
    box-shadow: 0 0 0 0.2rem var(--primary-color-focus-shadow, #{rgba($primary-color, 0.25)});
  }

  &:active:not(:disabled), &.active:not(:disabled) {
    color: var(--text-color-on-primary, #{$white});
    background-color: var(--primary-color-active, #{darken($primary-color, 10%)});
    border-color: var(--primary-color-active, #{darken($primary-color, 12.5%)});
    // box-shadow: inset 0 3px 5px rgba(0, 0, 0, 0.125); // Consider removing or making themeable
  }

  // Disabled state already handled by .btn:disabled, but if specific color needed for text:
  // &:disabled, &.disabled {
  //   color: var(--text-color-on-primary, #{$white});
  //   // background-color and border-color from .btn:disabled will make it look muted
  // }
}

// Secondary Button
.btn-secondary {
  color: var(--text-color-on-secondary, #{$white});
  background-color: var(--secondary-color, $secondary-color);
  border-color: var(--secondary-color, $secondary-color);

  &:hover:not(:disabled) {
    color: var(--text-color-on-secondary, #{$white});
    background-color: var(--secondary-color-hover, #{darken($secondary-color, 7.5%)});
    border-color: var(--secondary-color-hover, #{darken($secondary-color, 10%)});
  }

  &:focus, &.focus {
    box-shadow: 0 0 0 0.2rem var(--secondary-color-focus-shadow, #{rgba($secondary-color, 0.25)});
  }

  &:active:not(:disabled), &.active:not(:disabled) {
    color: var(--text-color-on-secondary, #{$white});
    background-color: var(--secondary-color-active, #{darken($secondary-color, 10%)});
    border-color: var(--secondary-color-active, #{darken($secondary-color, 12.5%)});
    // box-shadow: inset 0 3px 5px rgba(0, 0, 0, 0.125);
  }
}

// Outline Buttons (Example for Primary)
.btn-outline-primary {
  color: var(--primary-color, $primary-color);
  border-color: var(--primary-color, $primary-color);
  background-color: transparent;

  &:hover:not(:disabled) {
    color: var(--text-color-on-primary, #{$white});
    background-color: var(--primary-color-hover, $primary-color); // Use hover color for bg
    border-color: var(--primary-color-hover, $primary-color);
  }

  &:focus, &.focus {
    box-shadow: 0 0 0 0.2rem var(--primary-color-focus-shadow, #{rgba($primary-color, 0.25)});
  }

  &:active:not(:disabled), &.active:not(:disabled) {
    color: var(--text-color-on-primary, #{$white});
    background-color: var(--primary-color-active, $primary-color); // Use active color for bg
    border-color: var(--primary-color-active, $primary-color);
    // box-shadow: inset 0 3px 5px rgba(0, 0, 0, 0.125);
  }

  &:disabled, &.disabled {
    color: var(--primary-color, $primary-color); // Keep text color, opacity from .btn:disabled handles visual
    background-color: transparent;
  }
}

// Outline Buttons (Example for Secondary)
.btn-outline-secondary {
  color: var(--secondary-color, $secondary-color);
  border-color: var(--secondary-color, $secondary-color);
  background-color: transparent;

  &:hover:not(:disabled) {
    color: var(--text-color-on-secondary, #{$white});
    background-color: var(--secondary-color-hover, $secondary-color);
    border-color: var(--secondary-color-hover, $secondary-color);
  }

  &:focus, &.focus {
    box-shadow: 0 0 0 0.2rem var(--secondary-color-focus-shadow, #{rgba($secondary-color, 0.25)});
  }

  &:active:not(:disabled), &.active:not(:disabled) {
    color: var(--text-color-on-secondary, #{$white});
    background-color: var(--secondary-color-active, $secondary-color);
    border-color: var(--secondary-color-active, $secondary-color);
    // box-shadow: inset 0 3px 5px rgba(0, 0, 0, 0.125);
  }

  &:disabled, &.disabled {
    color: var(--secondary-color, $secondary-color);
    background-color: transparent;
  }
}


// Icon-only Button (adjust padding and line-height as needed)
.btn-icon {
  padding: $spacing-sm; // Adjust for a more square/circular shape
  line-height: 1; // Ensure icon is centered
  width: $font-size-base + ($spacing-sm * 2) + ($border-width * 2); // Approx square based on font-size and padding
  height: $font-size-base + ($spacing-sm * 2) + ($border-width * 2);
  // Example: For an icon font or SVG
  // i, svg {
  //   vertical-align: middle;
  // }
}

// Button Sizes (Examples)
.btn-sm {
  padding: $spacing-xs $spacing-sm; // 4px 8px
  font-size: $font-size-sm; // 14px
  line-height: $line-height-sm; // 1.2
  border-radius: $border-radius * 0.8; // ~3px
}

.btn-lg {
  padding: $spacing-md $spacing-lg; // 16px 24px
  font-size: $font-size-lg; // 20px
  line-height: $line-height-lg; // 1.7
  border-radius: $border-radius * 1.2; // ~5px
}

// Block button (full width)
.btn-block {
  display: block;
  width: 100%;

  + .btn-block { // Add spacing if multiple block buttons are stacked
    margin-top: $spacing-sm;
  }
}
