@import '../tokens';

// Base Card Style
.card {
  position: relative;
  display: flex;
  flex-direction: column;
  min-width: 0;
  word-wrap: break-word;
  background-color: var(--surface-color);
  background-clip: border-box;
  border: var(--border-width, $border-width) solid var(--border-color);
  border-radius: var(--border-radius, $border-radius);
  box-shadow: var(--box-shadow-sm, $box-shadow-sm);
  margin-bottom: $spacing-lg;
  transition: background-color $default-transition-duration $default-transition-timing-function,
              border-color $default-transition-duration $default-transition-timing-function,
              box-shadow $default-transition-duration $default-transition-timing-function;

  // Card Header
  .card-header {
    padding: $spacing-md $spacing-lg;
    margin-bottom: 0;
    background-color: var(--surface-header-color, var(--surface-color));
    color: var(--text-on-surface-color);
    border-bottom: var(--border-width, $border-width) solid var(--border-color);
    border-top-left-radius: calc(var(--border-radius, #{$border-radius}) - var(--border-width, #{$border-width}));
    border-top-right-radius: calc(var(--border-radius, #{$border-radius}) - var(--border-width, #{$border-width}));
    transition: background-color $default-transition-duration $default-transition-timing-function,
                border-color $default-transition-duration $default-transition-timing-function,
                color $default-transition-duration $default-transition-timing-function;

    &:first-child {
      border-radius: calc(var(--border-radius, #{$border-radius}) - var(--border-width, #{$border-width})) calc(var(--border-radius, #{$border-radius}) - var(--border-width, #{$border-width})) 0 0;
    }

    h1, h2, h3, h4, h5, h6 {
      margin-top: 0;
      margin-bottom: 0;
      font-size: $font-size-lg;
      color: inherit; // Inherit from .card-header
    }
  }

  // Card Body
  .card-body {
    flex: 1 1 auto;
    padding: $spacing-lg;
    color: var(--text-on-surface-color);
    transition: color $default-transition-duration $default-transition-timing-function;

    &::after {
      content: "";
      clear: both;
      display: table;
    }
  }

  // Card Footer
  .card-footer {
    padding: $spacing-md $spacing-lg;
    background-color: var(--surface-header-color, var(--surface-color));
    color: var(--text-on-surface-color);
    border-top: var(--border-width, $border-width) solid var(--border-color);
    border-bottom-left-radius: calc(var(--border-radius, #{$border-radius}) - var(--border-width, #{$border-width}));
    border-bottom-right-radius: calc(var(--border-radius, #{$border-radius}) - var(--border-width, #{$border-width}));
    transition: background-color $default-transition-duration $default-transition-timing-function,
                border-color $default-transition-duration $default-transition-timing-function,
                color $default-transition-duration $default-transition-timing-function;

    &:last-child {
      border-radius: 0 0 calc(var(--border-radius, #{$border-radius}) - var(--border-width, #{$border-width})) calc(var(--border-radius, #{$border-radius}) - var(--border-width, #{$border-width}));
    }
  }

  // Card Title (if not using card-header, usually in card-body)
  .card-title {
    margin-bottom: $spacing-md;
    font-size: $font-size-xl;
    font-weight: $font-weight-bold;
    color: var(--text-color-headings);
    transition: color $default-transition-duration $default-transition-timing-function;
  }

  // Card Subtitle
  .card-subtitle {
    margin-top: -$spacing-md / 2;
    margin-bottom: $spacing-sm;
    color: var(--text-muted-on-surface-color, #{lighten($dark-gray, 20%)}); // Cards are surfaces
    font-size: $font-size-base;
    transition: color $default-transition-duration $default-transition-timing-function;
  }

  // Card Text
  .card-text:last-child {
    margin-bottom: 0;
  }

  // Card Links
  .card-link {
    color: var(--primary-color);
    transition: color $default-transition-duration $default-transition-timing-function;
    &:hover {
      color: var(--primary-color-hover);
      text-decoration: none;
    }
    + .card-link {
      margin-left: $spacing-lg;
    }
  }

  // Image caps (top or bottom of card)
  .card-img-top,
  .card-img-bottom {
    width: 100%; // Make image responsive
    border-style: solid; // Needed for border overrides
    border-color: $border-color; // Match card border
  }

  .card-img-top {
    border-top-left-radius: calc(var(--border-radius, #{$border-radius}) - var(--border-width, #{$border-width}));
    border-top-right-radius: calc(var(--border-radius, #{$border-radius}) - var(--border-width, #{$border-width}));
    border-width: var(--border-width, $border-width) var(--border-width, $border-width) 0 var(--border-width, $border-width);
  }

  .card-img-bottom {
    border-bottom-left-radius: calc(var(--border-radius, #{$border-radius}) - var(--border-width, #{$border-width}));
    border-bottom-right-radius: calc(var(--border-radius, #{$border-radius}) - var(--border-width, #{$border-width}));
    border-width: 0 var(--border-width, $border-width) var(--border-width, $border-width) var(--border-width, $border-width);
  }

  // Image overlays
  .card-img-overlay {
    position: absolute;
    top: 0;
    right: 0;
    bottom: 0;
    left: 0;
    padding: $spacing-lg;
    border-radius: calc(var(--border-radius, #{$border-radius}) - var(--border-width, #{$border-width}));
    // Text color on overlays might need specific theming if background images vary
    // color: var(--text-color-on-overlay, #fff); // Example
  }
}

// Card Groups (for laying out cards with equal height and width)
.card-group {
  display: flex;
  flex-direction: column; // Stack by default

  .card {
    margin-bottom: $spacing-md; // Adjust spacing within group
  }

  @media (min-width: $breakpoint-sm) { // Use grid breakpoints
    flex-flow: row wrap;
    margin-right: -$spacing-md / 2; // Negative margin for gutters
    margin-left: -$spacing-md / 2;

    .card {
      flex: 1 0 0%; // Basis of 0 to allow equal distribution
      margin-bottom: 0; // Remove bottom margin when horizontal
      // Add gutters between cards
      margin-right: $spacing-md / 2;
      margin-left: $spacing-md / 2;

      // Ensure cards in the same row have same height
      // This usually requires JS or more complex CSS (e.g. display: grid on parent)
      // For now, this sets them up for flex distribution.
    }
  }
}


// Contextual Card Variants
.card-primary {
  border-color: var(--primary-color, $primary-color);
  .card-header {
    background-color: var(--primary-color, $primary-color);
    color: var(--text-color-on-primary, #{$white});
    border-color: var(--primary-color, $primary-color);
  }
}

.card-secondary {
  border-color: var(--secondary-color, $secondary-color);
  .card-header {
    background-color: var(--secondary-color, $secondary-color);
    color: var(--text-color-on-secondary, #{$white});
    border-color: var(--secondary-color, $secondary-color);
  }
}
// Add more contextual variants (success, danger, etc.) as needed, similar to panels.
// Example:
// .card-success {
//   border-color: var(--success-color, $success-color);
//   .card-header {
//     background-color: var(--success-color, $success-color);
//     color: var(--text-color-on-success, #{$white});
//     border-color: var(--success-color, $success-color);
//   }
// }


// Card with no shadow
.card-no-shadow {
  box-shadow: none;
}

// Card with larger shadow
.card-shadow-lg {
  box-shadow: var(--box-shadow-lg, $box-shadow-lg);
}

// Card with no border
.card-no-border {
  border: none !important;
  .card-header, .card-footer {
    border-color: transparent !important;
  }
  .card-img-top, .card-img-bottom {
    border-color: transparent !important;
  }
}
