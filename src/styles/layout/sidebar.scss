@import '../tokens';
@import '../typography';

// Main Sidebar / Side Panel
.app-sidebar {
  background-color: var(--surface-color);
  border-right: var(--border-width, $border-width) solid var(--border-color);
  padding: $spacing-lg $spacing-md;
  height: 100vh;
  overflow-y: auto;
  flex-shrink: 0; // Prevent shrinking beyond its explicit width/flex-basis
  // Transitions for theming and width changes (from JS and collapse class)
  transition: background-color $default-transition-duration $default-transition-timing-function,
              border-color $default-transition-duration $default-transition-timing-function,
              // transform is for potential future off-canvas, width for collapse/resize
              transform $default-transition-duration $default-transition-timing-function,
              width $default-transition-duration $default-transition-timing-function,
              flex-basis $default-transition-duration $default-transition-timing-function;


  @media (max-width: ($breakpoint-md - 1px)) { // Small screens
    width: 100% !important;  // Override inline style for full width
    flex-basis: 100% !important;
    max-width: 100% !important;
    border-right-width: 0; // No border when full width
  }

  // Sidebar Header (optional, e.g., for logo or title within sidebar)
  .sidebar-header {
    margin-bottom: $spacing-lg;
    padding-bottom: $spacing-lg;
    border-bottom: var(--border-width, $border-width) solid var(--border-color);
    transition: border-color $default-transition-duration $default-transition-timing-function;

    .sidebar-title {
      font-size: $font-size-lg;
      font-weight: $font-weight-bold;
      color: var(--text-on-surface-color);
      transition: color $default-transition-duration $default-transition-timing-function;
    }
  }

  // Sidebar Navigation
  .sidebar-nav {
    ul {
      list-style: none;
      padding-left: 0;
      margin-bottom: 0;
    }

    li {
      margin-bottom: $spacing-xs;
    }

    a {
      display: block;
      padding: $spacing-sm $spacing-md;
      color: var(--text-on-surface-color);
      text-decoration: none;
      border-radius: var(--border-radius, $border-radius);
      font-size: $font-size-base;
      // Transitions for background-color and color are already quite specific (0.15s).
      // Keeping them as is, or could change to $default-transition-duration if preferred.
      // For this exercise, let's make them consistent with the default.
      transition: background-color $default-transition-duration $default-transition-timing-function,
                  color $default-transition-duration $default-transition-timing-function;

      &:hover {
        background-color: var(--surface-hover-color);
        color: var(--primary-color);
      }

      &.active {
        background-color: var(--primary-color);
        color: var(--text-color-on-primary);
        font-weight: $font-weight-normal;
      }

      i, .icon { // For icons within nav links
        margin-right: $spacing-sm;
        width: 1.25em;
        text-align: center;
        // Icon color should inherit or be set based on link color
      }
    }

    ul ul { // Nested navigation
      margin-left: $spacing-md;
      margin-top: $spacing-xs;
      font-size: $font-size-sm;
    }
  }

  // Sidebar Footer (optional)
  .sidebar-footer {
    margin-top: $spacing-xl;
    padding-top: $spacing-lg;
    border-top: var(--border-width, $border-width) solid var(--border-color);
    font-size: $font-size-sm;
    color: var(--text-muted-color);
    transition: border-color $default-transition-duration $default-transition-timing-function,
                color $default-transition-duration $default-transition-timing-function;

    small {
      display: block;
      margin-bottom: $spacing-xs;
    }
  }
}

// Collapsed state for sidebar (example, controlled by a class on a parent or sidebar itself)
// This targets .app-sidebar when a parent (e.g. div.app) has .sidebar-collapsed
.app.sidebar-collapsed .app-sidebar {
  // This class takes precedence over inline styles for open/resizable state,
  // and sets the fixed collapsed width.
  width: 80px !important; // Use a SCSS variable e.g. $collapsed-sidebar-width
  flex-basis: 80px !important;
  flex-grow: 0 !important;
  flex-shrink: 0 !important;
  padding-left: $spacing-xs;
  padding-right: $spacing-xs;

  .sidebar-header .sidebar-title,
  // Selectively hide text content to show icons, etc.
  // This part depends on the actual content of SidePanel.tsx.
  // Assuming SidePanel.tsx itself will use its `collapsed` prop to hide text.
  // The styles here are for the .app-sidebar container.
  // The .side-panel component inside .app-sidebar will also react to the `collapsed` prop.
  // For example, if SidePanel has navigation text:
  // .sidebar-nav .nav-text { display: none; }
  // For now, SidePanel.scss handles its internal content hiding.
  .sidebar-footer { // Or hide footer elements
    // display: none; // Or use opacity, visibility for transitions
    opacity: 0;
    visibility: hidden;
  }

  // Example: if .app-sidebar itself had direct nav links with icons
  // .sidebar-nav a {
  //   text-align: center;
  //   i, .icon {
  //     margin-right: 0;
  //   }
  // }
}

// Toggle button for sidebar (example, place this outside the sidebar in your HTML)
.sidebar-toggle {
  // Basic styling for the toggle button
  // position: fixed; // Or absolute, depending on layout
  // top: 15px;
  // left: 260px; // Adjust based on sidebar width
  // z-index: 1025;
  // transition: left 0.3s ease-in-out;
}

.sidebar-collapsed .sidebar-toggle {
  // left: 90px; // Adjust based on collapsed sidebar width
}


// Responsive: Hide sidebar on smaller screens or transform to off-canvas
@media (max-width: $breakpoint-lg) { // Example breakpoint
  .app-sidebar {
    // By default, it might still be visible.
    // To hide it and use a toggle (off-canvas):
    // transform: translateX(-100%);
    // position: fixed;
    // z-index: 1100; // Higher z-index for off-canvas
    // box-shadow: $box-shadow-lg;
  }

  // .sidebar-open .app-sidebar { // Class to toggle visibility
  //   transform: translateX(0);
  // }

  // Adjust main content margin when sidebar is open/closed if it's not fixed overlay
}

// Styles for the Sidebar Resize Handle
.resize-handle-col {
  width: 8px;
  cursor: col-resize;
  position: relative;
  flex-shrink: 0;
  // background-color: var(--border-color); // Make it subtly visible
  // opacity: 0.3;

  display: none; // Hidden by default (mobile-first)
  @media (min-width: $breakpoint-md) {
    display: block;
  }

  &:hover::after,
  &.is-resizing::after {
    content: "";
    position: absolute;
    top: 0;
    bottom: 0;
    left: calc(50% - 1px);
    width: 2px;
    background-color: var(--primary-color);
    opacity: 0.6;
  }
}

// When sidebar is collapsed, hide the resize handle
.app.sidebar-collapsed .resize-handle-col {
  display: none !important;
}
